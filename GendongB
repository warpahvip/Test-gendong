-- SCRIPT UNTUK DEVICE YANG DIGENDONG (CARRIED) - Enhanced Fixed Version
-- Delta Executor Android - Carry System Professional

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")

-- Variabel Global
local isBeingCarried = false
local carrierPlayer = nil
local nearbyCarriers = {}
local detectionRange = 15
local carryTrack = nil
local isMinimized = false
local updateConnection = nil

-- GUI Setup (Professional)
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "CarriedSystemGUI"
ScreenGui.Parent = PlayerGui
ScreenGui.ResetOnSpawn = false

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 220, 0, 220)
MainFrame.Position = UDim2.new(1, -230, 0, 10)
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
MainFrame.BorderSizePixel = 0
MainFrame.BackgroundTransparency = 0.05
MainFrame.Parent = ScreenGui

local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 10)
MainCorner.Parent = MainFrame

-- Stroke for better appearance
local MainStroke = Instance.new("UIStroke")
MainStroke.Color = Color3.fromRGB(60, 60, 60)
MainStroke.Thickness = 1
MainStroke.Parent = MainFrame

-- Title Bar
local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Size = UDim2.new(1, 0, 0, 30)
TitleBar.Position = UDim2.new(0, 0, 0, 0)
TitleBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
TitleBar.BorderSizePixel = 0
TitleBar.Parent = MainFrame

local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 10)
TitleCorner.Parent = TitleBar

-- Title Text
local TitleText = Instance.new("TextLabel")
TitleText.Name = "TitleText"
TitleText.Size = UDim2.new(1, -60, 0, 30)
TitleText.Position = UDim2.new(0, 8, 0, 0)
TitleText.BackgroundTransparency = 1
TitleText.Text = "ü§ù CARRY REQUEST"
TitleText.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleText.TextScaled = true
TitleText.Font = Enum.Font.GothamBold
TitleText.TextXAlignment = Enum.TextXAlignment.Left
TitleText.Parent = TitleBar

-- Minimize Button
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Size = UDim2.new(0, 25, 0, 25)
MinimizeButton.Position = UDim2.new(1, -55, 0, 2.5)
MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 193, 7)
MinimizeButton.BorderSizePixel = 0
MinimizeButton.Text = "‚Äî"
MinimizeButton.TextColor3 = Color3.fromRGB(0, 0, 0)
MinimizeButton.TextScaled = true
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.Parent = TitleBar

local MinCorner = Instance.new("UICorner")
MinCorner.CornerRadius = UDim.new(0, 4)
MinCorner.Parent = MinimizeButton

-- Close Button
local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Size = UDim2.new(0, 25, 0, 25)
CloseButton.Position = UDim2.new(1, -27, 0, 2.5)
CloseButton.BackgroundColor3 = Color3.fromRGB(220, 53, 69)
CloseButton.BorderSizePixel = 0
CloseButton.Text = "‚úï"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextScaled = true
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Parent = TitleBar

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 4)
CloseCorner.Parent = CloseButton

-- Content Frame (untuk minimize)
local ContentFrame = Instance.new("Frame")
ContentFrame.Name = "ContentFrame"
ContentFrame.Size = UDim2.new(1, 0, 1, -30)
ContentFrame.Position = UDim2.new(0, 0, 0, 30)
ContentFrame.BackgroundTransparency = 1
ContentFrame.Parent = MainFrame

-- Status Label
local StatusLabel = Instance.new("TextLabel")
StatusLabel.Name = "StatusLabel"
StatusLabel.Size = UDim2.new(1, -16, 0, 25)
StatusLabel.Position = UDim2.new(0, 8, 0, 8)
StatusLabel.BackgroundTransparency = 1
StatusLabel.Text = "üîç Looking for carriers..."
StatusLabel.TextColor3 = Color3.fromRGB(100, 255, 255)
StatusLabel.TextScaled = true
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.TextXAlignment = Enum.TextXAlignment.Left
StatusLabel.Parent = ContentFrame

-- Carriers ScrollFrame
local CarriersFrame = Instance.new("ScrollingFrame")
CarriersFrame.Name = "CarriersFrame"
CarriersFrame.Size = UDim2.new(1, -16, 0, 120)
CarriersFrame.Position = UDim2.new(0, 8, 0, 40)
CarriersFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
CarriersFrame.BorderSizePixel = 0
CarriersFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
CarriersFrame.ScrollBarThickness = 5
CarriersFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)
CarriersFrame.Parent = ContentFrame

local CarriersCorner = Instance.new("UICorner")
CarriersCorner.CornerRadius = UDim.new(0, 8)
CarriersCorner.Parent = CarriersFrame

local CarriersLayout = Instance.new("UIListLayout")
CarriersLayout.SortOrder = Enum.SortOrder.Name
CarriersLayout.Padding = UDim.new(0, 4)
CarriersLayout.Parent = CarriersFrame

-- Release Button
local ReleaseButton = Instance.new("TextButton")
ReleaseButton.Name = "ReleaseButton"
ReleaseButton.Size = UDim2.new(1, -16, 0, 30)
ReleaseButton.Position = UDim2.new(0, 8, 0, 170)
ReleaseButton.BackgroundColor3 = Color3.fromRGB(220, 53, 69)
ReleaseButton.BorderSizePixel = 0
ReleaseButton.Text = "üîì GET DOWN"
ReleaseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ReleaseButton.TextScaled = true
ReleaseButton.Font = Enum.Font.GothamBold
ReleaseButton.Visible = false
ReleaseButton.Parent = ContentFrame

local ReleaseCorner = Instance.new("UICorner")
ReleaseCorner.CornerRadius = UDim.new(0, 8)
ReleaseCorner.Parent = ReleaseButton

-- Button Effects Function
local function addButtonEffects(button, hoverColor, normalColor)
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = hoverColor,
            Size = button.Size + UDim2.new(0, 2, 0, 1)
        }):Play()
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = normalColor,
            Size = button.Size - UDim2.new(0, 2, 0, 1)
        }):Play()
    end)
end

-- Add effects to control buttons
addButtonEffects(MinimizeButton, Color3.fromRGB(255, 213, 27), Color3.fromRGB(255, 193, 7))
addButtonEffects(CloseButton, Color3.fromRGB(240, 73, 89), Color3.fromRGB(220, 53, 69))
addButtonEffects(ReleaseButton, Color3.fromRGB(240, 73, 89), Color3.fromRGB(220, 53, 69))

-- Fungsi untuk membuat tombol carrier
local function createCarrierButton(player, distance)
    local button = Instance.new("TextButton")
    button.Name = player.Name
    button.Size = UDim2.new(1, -10, 0, 30)
    button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    button.BorderSizePixel = 0
    button.Text = string.format("üéí %s (%.0fm)", player.DisplayName or player.Name, distance)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextScaled = true
    button.Font = Enum.Font.Gotham
    button.Parent = CarriersFrame
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 6)
    buttonCorner.Parent = button
    
    -- Button effects
    addButtonEffects(button, Color3.fromRGB(65, 65, 65), Color3.fromRGB(45, 45, 45))
    
    -- Click event - FIXED
    button.MouseButton1Click:Connect(function()
        if not isBeingCarried then
            requestCarryFromPlayer(player)
        end
    end)
    
    return button
end

-- Fungsi untuk request carry - COMPLETELY FIXED
function requestCarryFromPlayer(carrierPlayerObj)
    if isBeingCarried or not carrierPlayerObj or not carrierPlayerObj.Character then
        print("‚ùå Cannot be carried: already being carried or invalid carrier")
        return
    end
    
    local carrierCharacter = carrierPlayerObj.Character
    local carrierRootPart = carrierCharacter:FindFirstChild("HumanoidRootPart")
    local carrierHumanoid = carrierCharacter:FindFirstChild("Humanoid")
    
    if not carrierRootPart or not carrierHumanoid then
        print("‚ùå Carrier missing essential parts")
        return
    end
    
    -- Check if carrier is already carrying someone
    if carrierCharacter:GetAttribute("IsCarryingPlayer") then
        print("‚ùå Carrier is already carrying someone")
        return
    end
    
    print("ü§ù Requesting carry from: " .. carrierPlayerObj.Name)
    
    -- Set being carried state FIRST
    isBeingCarried = true
    carrierPlayer = carrierPlayerObj
    
    -- Update UI immediately
    StatusLabel.Text = "ü§ù Carried by: " .. (carrierPlayerObj.DisplayName or carrierPlayerObj.Name)
    StatusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
    ReleaseButton.Visible = true
    CarriersFrame.Visible = false -- Hide carrier list when being carried
    
    -- Set attributes for cross-script communication
    Character:SetAttribute("IsBeingCarried", true)
    Character:SetAttribute("CarrierName", carrierPlayerObj.Name)
    carrierCharacter:SetAttribute("IsCarryingPlayer", LocalPlayer.Name)
    
    -- Disable our movement completely
    Humanoid.PlatformStand = true
    Humanoid.Sit = false
    RootPart.Anchored = false -- Make sure we're not anchored
    
    -- Create WeldConstraint for solid attachment
    local weldConstraint = Instance.new("WeldConstraint")
    weldConstraint.Name = "CarryWeld"
    weldConstraint.Part0 = carrierRootPart
    weldConstraint.Part1 = RootPart
    weldConstraint.Parent = carrierRootPart
    
    -- Set our position relative to carrier (piggyback style)
    local carryOffset = CFrame.new(0, 0.5, -1.5) * CFrame.Angles(0, 0, 0)
    weldConstraint.C1 = carryOffset
    
    -- Play carried animation on ourselves
    if carryTrack then 
        carryTrack:Stop()
        carryTrack:Destroy()
    end
    
    local carriedAnim = Instance.new("Animation")
    carriedAnim.AnimationId = "rbxassetid://507777826" -- Being carried animation
    carryTrack = Humanoid:LoadAnimation(carriedAnim)
    if carryTrack then
        carryTrack:Play()
        carryTrack.Looped = true
        carryTrack.Priority = Enum.AnimationPriority.Action
    end
    
    -- Play carrier animation on the carrier
    spawn(function()
        wait(0.1) -- Small delay
        if carrierHumanoid then
            local carrierCarryAnim = Instance.new("Animation")
            carrierCarryAnim.AnimationId = "rbxassetid://507766388" -- Carrying animation
            local carrierTrack = carrierHumanoid:LoadAnimation(carrierCarryAnim)
            if carrierTrack then
                carrierTrack:Play()
                carrierTrack.Looped = true
                carrierTrack.Priority = Enum.AnimationPriority.Action
                
                -- Store reference to stop later
                carrierCharacter:SetAttribute("CarryAnimTrack", carrierTrack)
            end
        end
    end)
    
    print("‚úÖ Successfully being carried by: " .. carrierPlayerObj.Name)
    
    -- Monitor carrier connection
    spawn(function()
        while isBeingCarried and carrierPlayer == carrierPlayerObj do
            if not carrierCharacter.Parent or not carrierRootPart.Parent or not carrierPlayerObj.Parent then
                print("‚ö†Ô∏è Carrier disconnected")
                releaseFromCarrier()
                break
            end
            wait(0.5)
        end
    end)
end

-- Fungsi untuk release dari carrier - COMPLETELY FIXED
function releaseFromCarrier()
    if not isBeingCarried then
        return
    end
    
    print("üîì Getting down from carrier")
    
    local carrierCharacter = carrierPlayer and carrierPlayer.Character
    
    -- Re-enable movement
    Humanoid.PlatformStand = false
    Humanoid.Sit = false
    
    -- Remove weld constraint from carrier
    if carrierCharacter then
        local carrierRoot = carrierCharacter:FindFirstChild("HumanoidRootPart")
        if carrierRoot then
            local weldConstraint = carrierRoot:FindFirstChild("CarryWeld")
            if weldConstraint then
                weldConstraint:Destroy()
            end
        end
        
        -- Stop carrier animation
        local carrierAnimTrack = carrierCharacter:GetAttribute("CarryAnimTrack")
        if carrierAnimTrack then
            carrierAnimTrack:Stop()
            carrierAnimTrack:Destroy()
        end
        
        -- Remove carrier attributes
        carrierCharacter:SetAttribute("IsCarryingPlayer", nil)
        carrierCharacter:SetAttribute("CarryAnimTrack", nil)
        
        -- Position ourselves safely next to carrier
        local carrierRootPart = carrierCharacter:FindFirstChild("HumanoidRootPart")
        if carrierRootPart then
            RootPart.CFrame = carrierRootPart.CFrame * CFrame.new(-2, 0, 0)
        end
    end
    
    -- Stop our animation
    if carryTrack then
        carryTrack:Stop()
        carryTrack:Destroy()
        carryTrack = nil
    end
    
    -- Remove our attributes
    Character:SetAttribute("IsBeingCarried", nil)
    Character:SetAttribute("CarrierName", nil)
    
    -- Reset state
    isBeingCarried = false
    carrierPlayer = nil
    
    -- Update UI
    StatusLabel.Text = "üîç Looking for carriers..."
    StatusLabel.TextColor3 = Color3.fromRGB(100, 255, 255)
    ReleaseButton.Visible = false
    CarriersFrame.Visible = true -- Show carrier list again
    
    print("‚úÖ Successfully released from carrier")
end

-- Update nearby carriers
local function updateNearbyCarriers()
    if not Character or not RootPart or isBeingCarried then
        return
    end
    
    -- Clear existing buttons
    for _, child in pairs(CarriersFrame:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end
    
    nearbyCarriers = {}
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local playerRoot = player.Character:FindFirstChild("HumanoidRootPart")
            if playerRoot then
                local distance = (RootPart.Position - playerRoot.Position).Magnitude
                
                -- Check if player can carry (not already carrying someone)
                local canCarry = not player.Character:GetAttribute("IsCarryingPlayer")
                
                if distance <= detectionRange and canCarry then
                    table.insert(nearbyCarriers, {player = player, distance = distance})
                end
            end
        end
    end
    
    -- Sort by distance
    table.sort(nearbyCarriers, function(a, b)
        return a.distance < b.distance
    end)
    
    -- Create buttons
    for _, data in pairs(nearbyCarriers) do
        createCarrierButton(data.player, data.distance)
    end
    
    -- Update canvas size
    CarriersFrame.CanvasSize = UDim2.new(0, 0, 0, #nearbyCarriers * 34)
    
    -- Update status if no carriers nearby
    if #nearbyCarriers == 0 then
        StatusLabel.Text = "‚ùå No carriers nearby"
        StatusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
    elseif not isBeingCarried then
        StatusLabel.Text = "üîç Looking for carriers..."
        StatusLabel.TextColor3 = Color3.fromRGB(100, 255, 255)
    end
end

-- Minimize functionality
local function toggleMinimize()
    isMinimized = not isMinimized
    
    local targetSize = isMinimized and UDim2.new(0, 220, 0, 30) or UDim2.new(0, 220, 0, 220)
    
    -- Animate frame resize
    TweenService:Create(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
        Size = targetSize
    }):Play()
    
    -- Hide content elements instantly
    ContentFrame.Visible = not isMinimized
    
    -- Update minimize button
    MinimizeButton.Text = isMinimized and "‚ñ°" or "‚Äî"
end

-- Control button events
MinimizeButton.MouseButton1Click:Connect(toggleMinimize)

CloseButton.MouseButton1Click:Connect(function()
    -- Stop any ongoing processes
    if updateConnection then updateConnection:Disconnect() end
    releaseFromCarrier()
    
    -- Fade out and destroy
    TweenService:Create(ScreenGui, TweenInfo.new(0.3), {
        BackgroundTransparency = 1
    }):Play()
    
    for _, obj in pairs(ScreenGui:GetDescendants()) do
        if obj:IsA("GuiObject") then
            TweenService:Create(obj, TweenInfo.new(0.3), {
                BackgroundTransparency = 1,
                TextTransparency = 1
            }):Play()
        end
    end
    
    wait(0.3)
    ScreenGui:Destroy()
    print("üóÇÔ∏è Carried System closed")
end)

-- Release button event
ReleaseButton.MouseButton1Click:Connect(function()
    releaseFromCarrier()
end)

-- Make frame draggable
local dragging = false
local dragStart = nil
local startPos = nil

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
    end
end)

TitleBar.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

TitleBar.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- Main update loop
updateConnection = RunService.Heartbeat:Connect(function()
    if not isMinimized and not isBeingCarried then
        updateNearbyCarriers()
    end
end)

-- Character respawn handler
LocalPlayer.CharacterAdded:Connect(function(newCharacter)
    wait(1) -- Wait for character to fully load
    Character = newCharacter
    Humanoid = Character:WaitForChild("Humanoid")
    RootPart = Character:WaitForChild("HumanoidRootPart")
    releaseFromCarrier()
end)

-- Player leaving handler
Players.PlayerRemoving:Connect(function(player)
    if carrierPlayer == player then
        releaseFromCarrier()
    end
end)

-- Cleanup on character removing
LocalPlayer.CharacterRemoving:Connect(function()
    releaseFromCarrier()
end)

-- Auto-detect if being carried by someone else - FIXED
spawn(function()
    while true do
        wait(0.5)
        if not isBeingCarried then
            -- Check if someone is trying to carry us
            local carrierName = Character:GetAttribute("CarrierName")
            if carrierName and not Character:GetAttribute("IsBeingCarried") then
                local carrier = Players:FindFirstChild(carrierName)
                if carrier and carrier.Character then
                    print("üîÑ Detected carry request from: " .. carrier.Name)
                    -- Someone wants to carry us, accept it
                    requestCarryFromPlayer(carrier)
                end
            end
        end
    end
end)

print("‚úÖ Enhanced Carry System (CARRIED) loaded!")
print("üí° Professional UI with minimize/close controls")
print("ü§ù Click carrier names to request being carried")
