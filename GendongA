-- ==========================================
-- DEVICE A - CARRY SENDER (EXECUTOR COMPATIBLE)
-- Script untuk Delta Executor - UI Minimalis
-- ==========================================

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- ==========================================
-- VARIABEL GLOBAL
-- ==========================================
local CarryGUI = nil
local isCarrying = false
local targetPlayer = nil
local carryConnection = nil
local requestId = nil

-- ==========================================
-- UI MINIMALIS & PROFESIONAL
-- ==========================================
local function createMinimalistGUI()
    if CarryGUI then CarryGUI:Destroy() end
    
    CarryGUI = Instance.new("ScreenGui")
    CarryGUI.Name = "CarrySenderGUI"
    CarryGUI.ResetOnSpawn = false
    CarryGUI.Parent = PlayerGui
    
    -- Main frame - compact size
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 180, 0, 70)
    mainFrame.Position = UDim2.new(0, 10, 1, -80)
    mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = CarryGUI
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = mainFrame
    
    -- Subtle border
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(70, 130, 255)
    stroke.Thickness = 1
    stroke.Transparency = 0.3
    stroke.Parent = mainFrame
    
    -- Header strip
    local headerStrip = Instance.new("Frame")
    headerStrip.Size = UDim2.new(1, 0, 0, 3)
    headerStrip.Position = UDim2.new(0, 0, 0, 0)
    headerStrip.BackgroundColor3 = Color3.fromRGB(70, 130, 255)
    headerStrip.BorderSizePixel = 0
    headerStrip.Parent = mainFrame
    
    local stripCorner = Instance.new("UICorner")
    stripCorner.CornerRadius = UDim.new(0, 6)
    stripCorner.Parent = headerStrip
    
    -- Input field
    local playerInput = Instance.new("TextBox")
    playerInput.Name = "PlayerInput"
    playerInput.Size = UDim2.new(0.65, -5, 0, 22)
    playerInput.Position = UDim2.new(0, 5, 0, 8)
    playerInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    playerInput.BorderSizePixel = 0
    playerInput.Text = ""
    playerInput.PlaceholderText = "Player name"
    playerInput.PlaceholderColor3 = Color3.fromRGB(120, 120, 120)
    playerInput.TextColor3 = Color3.fromRGB(255, 255, 255)
    playerInput.TextSize = 11
    playerInput.Font = Enum.Font.Gotham
    playerInput.Parent = mainFrame
    
    local inputCorner = Instance.new("UICorner")
    inputCorner.CornerRadius = UDim.new(0, 3)
    inputCorner.Parent = playerInput
    
    -- Carry button - compact
    local carryButton = Instance.new("TextButton")
    carryButton.Name = "CarryButton"
    carryButton.Size = UDim2.new(0.35, -10, 0, 22)
    carryButton.Position = UDim2.new(0.65, 0, 0, 8)
    carryButton.BackgroundColor3 = Color3.fromRGB(40, 160, 90)
    carryButton.BorderSizePixel = 0
    carryButton.Text = "CARRY"
    carryButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    carryButton.TextSize = 10
    carryButton.Font = Enum.Font.GothamBold
    carryButton.Parent = mainFrame
    
    local carryCorner = Instance.new("UICorner")
    carryCorner.CornerRadius = UDim.new(0, 3)
    carryCorner.Parent = carryButton
    
    -- Stop button
    local stopButton = Instance.new("TextButton")
    stopButton.Name = "StopButton"
    stopButton.Size = UDim2.new(0.35, -10, 0, 22)
    stopButton.Position = UDim2.new(0.65, 0, 0, 8)
    stopButton.BackgroundColor3 = Color3.fromRGB(200, 60, 60)
    stopButton.BorderSizePixel = 0
    stopButton.Text = "STOP"
    stopButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    stopButton.TextSize = 10
    stopButton.Font = Enum.Font.GothamBold
    stopButton.Visible = false
    stopButton.Parent = mainFrame
    
    local stopCorner = Instance.new("UICorner")
    stopCorner.CornerRadius = UDim.new(0, 3)
    stopCorner.Parent = stopButton
    
    -- Status - compact
    local statusLabel = Instance.new("TextLabel")
    statusLabel.Name = "StatusLabel"
    statusLabel.Size = UDim2.new(1, -10, 0, 35)
    statusLabel.Position = UDim2.new(0, 5, 0, 35)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Text = "Ready to send request"
    statusLabel.TextColor3 = Color3.fromRGB(170, 170, 170)
    statusLabel.TextSize = 9
    statusLabel.Font = Enum.Font.Gotham
    statusLabel.TextWrapped = true
    statusLabel.Parent = mainFrame
    
    return mainFrame, playerInput, carryButton, stopButton, statusLabel
end

-- ==========================================
-- NOTIFIKASI MINIMALIS
-- ==========================================
local function showNotification(text, color)
    local notif = Instance.new("Frame")
    notif.Size = UDim2.new(0, 200, 0, 35)
    notif.Position = UDim2.new(1, 220, 0.5, -17)
    notif.BackgroundColor3 = color or Color3.fromRGB(70, 70, 70)
    notif.BorderSizePixel = 0
    notif.Parent = PlayerGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = notif
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -10, 1, 0)
    label.Position = UDim2.new(0, 5, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextSize = 11
    label.Font = Enum.Font.Gotham
    label.TextWrapped = true
    label.Parent = notif
    
    -- Slide animation
    local slideIn = TweenService:Create(notif, TweenInfo.new(0.3), {Position = UDim2.new(1, -210, 0.5, -17)})
    slideIn:Play()
    
    game:GetService("Debris"):AddItem(notif, 2.5)
end

-- ==========================================
-- KOMUNIKASI MENGGUNAKAN BINDABLE EVENTS
-- ==========================================
local function setupCommunication()
    -- Buat folder untuk komunikasi
    local commFolder = game:FindFirstChild("_CarryComm")
    if not commFolder then
        commFolder = Instance.new("Folder")
        commFolder.Name = "_CarryComm"
        commFolder.Parent = game
    end
    
    return commFolder
end

-- ==========================================
-- FUNGSI CARRY
-- ==========================================
local function sendCarryRequest(targetName)
    if not targetName or targetName == "" then
        showNotification("Enter player name", Color3.fromRGB(200, 60, 60))
        return
    end
    
    -- Cari target player
    targetPlayer = nil
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local name = player.Name:lower()
            local display = player.DisplayName:lower()
            if name:find(targetName:lower()) or display:find(targetName:lower()) then
                targetPlayer = player
                break
            end
        end
    end
    
    if not targetPlayer then
        showNotification("Player not found", Color3.fromRGB(200, 60, 60))
        return
    end
    
    if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        showNotification("Target not spawned", Color3.fromRGB(200, 60, 60))
        return
    end
    
    -- Generate unique request ID
    requestId = HttpService:GenerateGUID(false)
    
    -- Kirim request menggunakan RemoteEvent jika tersedia, atau gunakan method alternatif
    pcall(function()
        carryRequestEvent:FireServer("SEND_REQUEST", targetName)
    end)
    
    -- Method alternatif: gunakan StringValue di workspace
    local requestSignal = Instance.new("StringValue")
    requestSignal.Name = "CarryRequest_" .. requestId
    requestSignal.Value = LocalPlayer.UserId .. "|" .. targetPlayer.UserId .. "|" .. tick()
    requestSignal.Parent = workspace
    
    -- Update UI
    if CarryGUI and CarryGUI:FindFirstChild("MainFrame") then
        CarryGUI.MainFrame.StatusLabel.Text = "Waiting for " .. targetPlayer.DisplayName .. "..."
        CarryGUI.MainFrame.StatusLabel.TextColor3 = Color3.fromRGB(255, 180, 0)
    end
    
    showNotification("Request sent to " .. targetPlayer.DisplayName, Color3.fromRGB(70, 130, 255))
    
    -- Timeout handling
    spawn(function()
        wait(20) -- 20 detik timeout
        if requestSignal and requestSignal.Parent then
            requestSignal:Destroy()
            if not isCarrying and CarryGUI and CarryGUI:FindFirstChild("MainFrame") then
                CarryGUI.MainFrame.StatusLabel.Text = "Request timeout"
                CarryGUI.MainFrame.StatusLabel.TextColor3 = Color3.fromRGB(200, 60, 60)
            end
            showNotification("Request timeout", Color3.fromRGB(200, 60, 60))
            targetPlayer = nil
            requestId = nil
        end
    end)
end

local function startCarrying()
    if not targetPlayer or not targetPlayer.Character then return end
    
    isCarrying = true
    
    -- Update UI
    if CarryGUI and CarryGUI:FindFirstChild("MainFrame") then
        CarryGUI.MainFrame.CarryButton.Visible = false
        CarryGUI.MainFrame.StopButton.Visible = true
        CarryGUI.MainFrame.StatusLabel.Text = "Carrying " .. targetPlayer.DisplayName
        CarryGUI.MainFrame.StatusLabel.TextColor3 = Color3.fromRGB(40, 160, 90)
    end
    
    showNotification("Started carrying", Color3.fromRGB(40, 160, 90))
    
    -- Setup carry logic
    local character = LocalPlayer.Character
    local humanoid = character:FindFirstChild("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    local targetCharacter = targetPlayer.Character
    local targetHumanoid = targetCharacter:FindFirstChild("Humanoid")
    local targetRootPart = targetCharacter:FindFirstChild("HumanoidRootPart")
    
    if not rootPart or not targetRootPart then return end
    
    -- Slow down carrier
    if humanoid then
        humanoid.WalkSpeed = humanoid.WalkSpeed * 0.7
    end
    
    -- Disable target movement
    if targetHumanoid then
        targetHumanoid.PlatformStand = true
        targetHumanoid.WalkSpeed = 0
        targetHumanoid.JumpPower = 0
    end
    
    -- Create BodyMovers
    local bodyPosition = Instance.new("BodyPosition")
    bodyPosition.MaxForce = Vector3.new(5000, 5000, 5000)
    bodyPosition.D = 2500
    bodyPosition.P = 12000
    bodyPosition.Parent = targetRootPart
    
    local bodyAngularVelocity = Instance.new("BodyAngularVelocity")
    bodyAngularVelocity.MaxTorque = Vector3.new(0, 5000, 0)
    bodyAngularVelocity.AngularVelocity = Vector3.new(0, 0, 0)
    bodyAngularVelocity.Parent = targetRootPart
    
    -- Carry update loop
    carryConnection = RunService.Heartbeat:Connect(function()
        if not isCarrying or not targetPlayer or not LocalPlayer.Character then
            stopCarrying()
            return
        end
        
        local newRootPart = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        local newTargetRootPart = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")
        
        if not newRootPart or not newTargetRootPart then
            stopCarrying()
            return
        end
        
        -- Calculate shoulder position
        local carrierCFrame = newRootPart.CFrame
        local shoulderPos = carrierCFrame.Position + carrierCFrame.UpVector * 1.5 + carrierCFrame.LookVector * -0.5
        
        bodyPosition.Position = shoulderPos
        
        -- Match carrier rotation
        local lookDirection = carrierCFrame.LookVector
        bodyAngularVelocity.AngularVelocity = Vector3.new(0, math.atan2(lookDirection.X, lookDirection.Z) * 3, 0)
        
        -- Send update signal to target
        local updateSignal = workspace:FindFirstChild("CarryUpdate_" .. LocalPlayer.UserId)
        if not updateSignal then
            updateSignal = Instance.new("StringValue")
            updateSignal.Name = "CarryUpdate_" .. LocalPlayer.UserId
            updateSignal.Parent = workspace
        end
        updateSignal.Value = targetPlayer.UserId .. "|UPDATE|" .. tick()
    end)
end

local function stopCarrying()
    isCarrying = false
    
    if carryConnection then
        carryConnection:Disconnect()
        carryConnection = nil
    end
    
    -- Reset carrier
    if LocalPlayer.Character then
        local humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = 16
        end
    end
    
    -- Send stop signal
    if targetPlayer then
        local stopSignal = Instance.new("StringValue")
        stopSignal.Name = "CarryStop_" .. HttpService:GenerateGUID(false)
        stopSignal.Value = targetPlayer.UserId .. "|STOP|" .. tick()
        stopSignal.Parent = workspace
        
        game:GetService("Debris"):AddItem(stopSignal, 5)
    end
    
    -- Update UI
    if CarryGUI and CarryGUI:FindFirstChild("MainFrame") then
        CarryGUI.MainFrame.CarryButton.Visible = true
        CarryGUI.MainFrame.StopButton.Visible = false
        CarryGUI.MainFrame.StatusLabel.Text = "Ready to send request"
        CarryGUI.MainFrame.StatusLabel.TextColor3 = Color3.fromRGB(170, 170, 170)
    end
    
    showNotification("Carry stopped", Color3.fromRGB(255, 180, 0))
    targetPlayer = nil
    requestId = nil
end

-- ==========================================
-- MONITOR RESPONSES
-- ==========================================
local function monitorResponses()
    RunService.Heartbeat:Connect(function()
        if requestId then
            -- Check untuk response
            for _, obj in pairs(workspace:GetChildren()) do
                if obj.Name == "CarryResponse_" .. requestId and obj:IsA("StringValue") then
                    local data = obj.Value:split("|")
                    local response = data[1]
                    
                    obj:Destroy()
                    
                    if response == "ACCEPT" then
                        startCarrying()
                        showNotification("Request accepted!", Color3.fromRGB(40, 160, 90))
                    else
                        if CarryGUI and CarryGUI:FindFirstChild("MainFrame") then
                            CarryGUI.MainFrame.StatusLabel.Text = "Request declined"
                            CarryGUI.MainFrame.StatusLabel.TextColor3 = Color3.fromRGB(200, 60, 60)
                        end
                        showNotification("Request declined", Color3.fromRGB(200, 60, 60))
                        targetPlayer = nil
                    end
                    requestId = nil
                    break
                end
            end
        end
    end)
end

-- ==========================================
-- DRAG FUNCTIONALITY
-- ==========================================
local function makeDraggable(frame)
    local dragToggle = nil
    local dragStart = nil
    local startPos = nil
    
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragToggle = true
            dragStart = input.Position
            startPos = frame.Position
        end
    end)
    
    frame.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragToggle = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and dragToggle then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)
end

-- ==========================================
-- SETUP GUI & EVENTS
-- ==========================================
local function initialize()
    local mainFrame, playerInput, carryButton, stopButton, statusLabel = createMinimalistGUI()
    makeDraggable(mainFrame)
    
    -- Button events
    carryButton.MouseButton1Click:Connect(function()
        sendCarryRequest(playerInput.Text)
    end)
    
    stopButton.MouseButton1Click:Connect(function()
        stopCarrying()
    end)
    
    -- Keybinds
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        
        if input.KeyCode == Enum.KeyCode.F then
            mainFrame.Visible = not mainFrame.Visible
        elseif input.KeyCode == Enum.KeyCode.G and mainFrame.Visible and carryButton.Visible then
            sendCarryRequest(playerInput.Text)
        elseif input.KeyCode == Enum.KeyCode.H and isCarrying then
            stopCarrying()
        end
    end)
    
    -- Start monitoring
    monitorResponses()
    
    showNotification("Device A Ready - F to toggle", Color3.fromRGB(70, 130, 255))
    
    print("=== CARRY SENDER LOADED ===")
    print("F - Toggle GUI | G - Send Request | H - Stop")
end

-- ==========================================
-- CLEANUP
-- ==========================================
Players.PlayerRemoving:Connect(function(player)
    if player == targetPlayer then
        stopCarrying()
    end
end)

LocalPlayer.CharacterRemoving:Connect(function()
    stopCarrying()
end)

-- Start
initialize()
