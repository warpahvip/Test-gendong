-- SCRIPT CARRIER (PENGGENDONG) - WORKING VERSION
-- Pastikan script ini berjalan di device yang akan menggendong

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Variables
local isCarrying = false
local carriedPlayer = nil
local weld = nil
local carryAnimation = nil

-- Get character safely
local function getCharacter()
    return LocalPlayer.Character
end

local function getHumanoid()
    local char = getCharacter()
    return char and char:FindFirstChild("Humanoid")
end

local function getRootPart()
    local char = getCharacter()
    return char and char:FindFirstChild("HumanoidRootPart")
end

-- Create GUI
local gui = Instance.new("ScreenGui")
gui.Name = "CarrierGUI"
gui.ResetOnSpawn = false
gui.Parent = PlayerGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 250, 0, 300)
frame.Position = UDim2.new(0, 10, 0, 10)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Parent = gui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = frame

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 40)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
title.BorderSizePixel = 0
title.Text = "CARRIER SYSTEM"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextScaled = true
title.Font = Enum.Font.GothamBold
title.Parent = frame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = title

local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(1, -20, 0, 30)
statusLabel.Position = UDim2.new(0, 10, 0, 50)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "Ready to carry players"
statusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
statusLabel.TextScaled = true
statusLabel.Font = Enum.Font.Gotham
statusLabel.Parent = frame

local playersFrame = Instance.new("ScrollingFrame")
playersFrame.Size = UDim2.new(1, -20, 0, 180)
playersFrame.Position = UDim2.new(0, 10, 0, 90)
playersFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
playersFrame.BorderSizePixel = 0
playersFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
playersFrame.ScrollBarThickness = 6
playersFrame.Parent = frame

local playersCorner = Instance.new("UICorner")
playersCorner.CornerRadius = UDim.new(0, 6)
playersCorner.Parent = playersFrame

local layout = Instance.new("UIListLayout")
layout.SortOrder = Enum.SortOrder.Name
layout.Padding = UDim.new(0, 5)
layout.Parent = playersFrame

local releaseButton = Instance.new("TextButton")
releaseButton.Size = UDim2.new(1, -20, 0, 25)
releaseButton.Position = UDim2.new(0, 10, 0, 275)
releaseButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
releaseButton.BorderSizePixel = 0
releaseButton.Text = "RELEASE PLAYER"
releaseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
releaseButton.TextScaled = true
releaseButton.Font = Enum.Font.GothamBold
releaseButton.Visible = false
releaseButton.Parent = frame

local releaseCorner = Instance.new("UICorner")
releaseCorner.CornerRadius = UDim.new(0, 4)
releaseCorner.Parent = releaseButton

-- Carry function - FIXED AND SIMPLIFIED
local function carryPlayer(targetPlayer)
    local myChar = getCharacter()
    local myRoot = getRootPart()
    local myHumanoid = getHumanoid()
    
    if not myChar or not myRoot or not myHumanoid then
        print("ERROR: My character not ready")
        return
    end
    
    if not targetPlayer.Character then
        print("ERROR: Target player character not found")
        return
    end
    
    local targetChar = targetPlayer.Character
    local targetRoot = targetChar:FindFirstChild("HumanoidRootPart")
    local targetHumanoid = targetChar:FindFirstChild("Humanoid")
    
    if not targetRoot or not targetHumanoid then
        print("ERROR: Target character parts not found")
        return
    end
    
    if isCarrying then
        print("Already carrying someone")
        return
    end
    
    print("Starting to carry: " .. targetPlayer.Name)
    
    -- Set states
    isCarrying = true
    carriedPlayer = targetPlayer
    
    -- Update GUI
    statusLabel.Text = "Carrying: " .. targetPlayer.Name
    statusLabel.TextColor3 = Color3.fromRGB(255, 200, 100)
    releaseButton.Visible = true
    playersFrame.Visible = false
    
    -- Disable target movement
    targetHumanoid.PlatformStand = true
    
    -- Create weld for attachment
    weld = Instance.new("WeldConstraint")
    weld.Part0 = myRoot
    weld.Part1 = targetRoot
    weld.Parent = myRoot
    
    -- Position target on back (piggyback style)
    targetRoot.CFrame = myRoot.CFrame * CFrame.new(0, 1, -2)
    
    -- Play animations
    spawn(function()
        wait(0.1)
        
        -- Carrier animation
        local carryAnim = Instance.new("Animation")
        carryAnim.AnimationId = "rbxassetid://507766388"
        carryAnimation = myHumanoid:LoadAnimation(carryAnim)
        carryAnimation:Play()
        carryAnimation.Looped = true
        
        -- Carried animation
        local carriedAnim = Instance.new("Animation")
        carriedAnim.AnimationId = "rbxassetid://507777826"
        local carriedAnimation = targetHumanoid:LoadAnimation(carriedAnim)
        carriedAnimation:Play()
        carriedAnimation.Looped = true
        
        -- Store carried animation reference
        targetChar:SetAttribute("CarriedAnim", carriedAnimation)
    end)
    
    print("SUCCESS: Now carrying " .. targetPlayer.Name)
end

-- Release function - FIXED
local function releasePlayer()
    if not isCarrying or not carriedPlayer then
        return
    end
    
    print("Releasing: " .. carriedPlayer.Name)
    
    local targetChar = carriedPlayer.Character
    if targetChar then
        local targetHumanoid = targetChar:FindFirstChild("Humanoid")
        local targetRoot = targetChar:FindFirstChild("HumanoidRootPart")
        
        -- Re-enable movement
        if targetHumanoid then
            targetHumanoid.PlatformStand = false
        end
        
        -- Stop carried animation
        local carriedAnim = targetChar:GetAttribute("CarriedAnim")
        if carriedAnim then
            carriedAnim:Stop()
            carriedAnim:Destroy()
            targetChar:SetAttribute("CarriedAnim", nil)
        end
        
        -- Position safely
        if targetRoot then
            local myRoot = getRootPart()
            if myRoot then
                targetRoot.CFrame = myRoot.CFrame * CFrame.new(3, 0, 0)
            end
        end
    end
    
    -- Remove weld
    if weld then
        weld:Destroy()
        weld = nil
    end
    
    -- Stop carrier animation
    if carryAnimation then
        carryAnimation:Stop()
        carryAnimation:Destroy()
        carryAnimation = nil
    end
    
    -- Reset states
    isCarrying = false
    carriedPlayer = nil
    
    -- Update GUI
    statusLabel.Text = "Ready to carry players"
    statusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
    releaseButton.Visible = false
    playersFrame.Visible = true
    
    print("SUCCESS: Player released")
end

-- Create player buttons
local function updatePlayerList()
    if isCarrying then return end
    
    -- Clear existing buttons
    for _, child in pairs(playersFrame:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end
    
    local myRoot = getRootPart()
    if not myRoot then return end
    
    local buttonsCreated = 0
    
    -- Create button for each nearby player
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local playerRoot = player.Character:FindFirstChild("HumanoidRootPart")
            if playerRoot then
                local distance = (myRoot.Position - playerRoot.Position).Magnitude
                
                if distance <= 20 then -- Detection range
                    local button = Instance.new("TextButton")
                    button.Size = UDim2.new(1, -10, 0, 35)
                    button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                    button.BorderSizePixel = 0
                    button.Text = string.format("%s (%.0fm)", player.Name, distance)
                    button.TextColor3 = Color3.fromRGB(255, 255, 255)
                    button.TextScaled = true
                    button.Font = Enum.Font.Gotham
                    button.Parent = playersFrame
                    
                    local buttonCorner = Instance.new("UICorner")
                    buttonCorner.CornerRadius = UDim.new(0, 4)
                    buttonCorner.Parent = button
                    
                    -- CRITICAL FIX: Proper click event
                    local targetPlayerRef = player -- Store reference
                    button.MouseButton1Click:Connect(function()
                        print("Button clicked for: " .. targetPlayerRef.Name)
                        carryPlayer(targetPlayerRef)
                    end)
                    
                    -- Hover effects
                    button.MouseEnter:Connect(function()
                        button.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
                    end)
                    
                    button.MouseLeave:Connect(function()
                        button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                    end)
                    
                    buttonsCreated = buttonsCreated + 1
                end
            end
        end
    end
    
    -- Update canvas size
    playersFrame.CanvasSize = UDim2.new(0, 0, 0, buttonsCreated * 40)
end

-- Release button event
releaseButton.MouseButton1Click:Connect(function()
    releasePlayer()
end)

-- Update loop
RunService.Heartbeat:Connect(function()
    if not isCarrying then
        updatePlayerList()
    end
end)

-- Character added handler
LocalPlayer.CharacterAdded:Connect(function()
    wait(1)
    releasePlayer() -- Clean up if respawned
end)

-- Player leaving handler
Players.PlayerRemoving:Connect(function(player)
    if carriedPlayer == player then
        releasePlayer()
    end
end)

print("CARRIER SCRIPT LOADED - Click player names to carry them!")
print("Make sure both devices are close to each other")
